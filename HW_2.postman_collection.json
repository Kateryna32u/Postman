{
	"info": {
		"_postman_id": "84459f9c-ecc5-458c-a1da-3d1fd1068542",
		"name": "Collection HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25095979"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
							"    console.log(response.json());\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!ss\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ip-port}}/first?name=Kate",
					"host": [
						"{{ip-port}}"
					],
					"path": [
						"first"
					],
					"query": [
						{
							"key": "name",
							"value": "Kate"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
							"    console.log(response.json());\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let req_f = request.data\r",
							"let resp_f = pm.response.json()\r",
							"\r",
							"let req_name = req_f.name\r",
							"let resp_name = resp_f.name\r",
							"pm.test(\"Check_name_1\", function() {\r",
							"    pm.expect(resp_name).to.eql('Kate');\r",
							"});\r",
							"\r",
							"let req_age = +req_f.age\r",
							"let resp_age = +resp_f.age\r",
							"pm.test(\"Check_age_1\", function() {\r",
							"    pm.expect(resp_age).to.eql(35);\r",
							"});\r",
							"\r",
							"let req_salary = +req_f.salary\r",
							"let resp_salary = +resp_f.salary\r",
							"\r",
							"//console.log (\"req_salary = \"+ req_salary)\r",
							"//console.log (\"req_salary = \"+ typeof req_name)\r",
							"\r",
							"pm.test(\"Check_salary\", function() {\r",
							"    pm.expect(resp_salary).to.eql(2000);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Check_name_2\", function() {\r",
							"    pm.expect(resp_name).to.eql(req_name);\r",
							"});\r",
							"\r",
							"pm.test(\"Check_age_2\", function() {\r",
							"    pm.expect(resp_age).to.eql(req_age);\r",
							"});\r",
							"\r",
							"pm.test(\"Check_salary_2\", function() {\r",
							"    pm.expect(resp_salary).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"console.log (\"family = \"+ JSON.stringify (resp_f.family))\r",
							"\r",
							"let resp_u_salary_1_5_year = +resp_f.family.u_salary_1_5_year \r",
							"pm.test(\"Check_u_salary_1_5_year\", function() {\r",
							"    pm.expect(resp_u_salary_1_5_year).to.eql(req_salary * 4);\r",
							"});\r",
							"\r",
							"console.log (\"req_salary = \"+ req_f.salary)\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Kate",
							"type": "text"
						},
						{
							"key": "age",
							"value": "35",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "2000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{ip-port}}/user_info_3",
					"host": [
						"{{ip-port}}"
					],
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
							"    console.log(response.json());\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let req_f = pm.request.url.query.toObject();\r",
							"let resp_f = pm.response.json()\r",
							"\r",
							"let req_name = req_f.name\r",
							"let resp_name = resp_f.name\r",
							"pm.test(\"Check_name\", function() {\r",
							"    pm.expect(resp_name).to.eql(req_name);\r",
							"});\r",
							"console.log (\"resp_name = \"+ resp_f.name)\r",
							"console.log (\"req_name = \"+ req_f.name)\r",
							"console.log (\"req_salary = \"+ req_f.salary)\r",
							"\r",
							"let req_age = +req_f.age\r",
							"let resp_age = +resp_f.age\r",
							"pm.test(\"Check_age\", function() {\r",
							"    pm.expect(resp_age).to.eql(req_age);\r",
							"});\r",
							"\r",
							"let req_salary = +req_f.salary\r",
							"let resp_salary = +resp_f.salary\r",
							"pm.test(\"Check_salary\", function() {\r",
							"    pm.expect(resp_salary).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"console.log (\"family = \"+ JSON.stringify (resp_f.family))\r",
							"\r",
							"pm.test(\"Check_dog_name\", function() {\r",
							"    pm.expect(resp_f.family.pets.dog).to.have.property (\"name\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check_dog_age\", function() {\r",
							"    pm.expect(resp_f.family.pets.dog).to.have.property (\"age\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check_name_Luky\", function() {\r",
							"    pm.expect(resp_f.family.pets.dog.name).to.eql (\"Luky\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check_dog_age_4\", function() {\r",
							"    pm.expect(resp_f.family.pets.dog.age).to.eql (4);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Kate&age=35&salary=2000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Kate"
						},
						{
							"key": "age",
							"value": "35"
						},
						{
							"key": "salary",
							"value": "2000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
							"    console.log(response.json());\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"let req_f = pm.request.url.query.toObject();\r",
							"let resp_f = pm.response.json()\r",
							"\r",
							"\r",
							"let req_name = req_f.name\r",
							"let resp_name = resp_f.name\r",
							"pm.test(\"Check_name\", function() {\r",
							"    pm.expect(resp_name).to.eql(req_name);\r",
							"});\r",
							"console.log (\"resp_name = \"+ resp_f.name)\r",
							"console.log (\"req_name = \"+ req_f.name)\r",
							"\r",
							"let req_age = +req_f.age\r",
							"let resp_age = +resp_f.age\r",
							"pm.test(\"Check_age\", function() {\r",
							"    pm.expect(resp_age).to.eql(req_age);\r",
							"});\r",
							"\r",
							"console.log (\"req_salary = \"+ JSON.stringify (req_f.salary))\r",
							"console.log (\"resp_salary = \"+ JSON.stringify (resp_f.salary))\r",
							"console.log (\"resp_salary_0 = \"+ JSON.stringify (resp_f.salary [0]))\r",
							"console.log (\"resp_salary_1 = \"+ JSON.stringify (resp_f.salary [1]))\r",
							"console.log (\"resp_salary_2 = \"+ JSON.stringify (resp_f.salary [2]))\r",
							"\r",
							"let req_salary = +req_f.salary\r",
							"let resp_salary = +resp_f.salary\r",
							"pm.test(\"Check_salary_0\", function() {\r",
							"    pm.expect (resp_f.salary [0]).to.eql(req_salary);\r",
							"    });\r",
							"\r",
							"let resp_salary_1 = +resp_f.salary [1]\r",
							"pm.test(\"Check_salary_1\", function() {\r",
							"    pm.expect (resp_salary_1).to.eql(req_salary * 2);\r",
							"    });\r",
							"\r",
							"console.log (\"req_salary = \"+ typeof req_name)\r",
							"console.log (\"resp_salary = \"+ typeof resp_name)\r",
							"\r",
							"let resp_salary_2 = +resp_f.salary [2]\r",
							"pm.test(\"Check_salary_2\", function() {\r",
							"    pm.expect (resp_salary_2).to.eql(req_salary * 3);\r",
							"    });\r",
							"\r",
							"\r",
							"resp_f.salary.forEach (function(element)\r",
							"{console.log (element)}\r",
							");\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ip-port}}/object_info_4?name={{name}}&age={{age}}&salary={{salary}}",
					"host": [
						"{{ip-port}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name}}"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "salary",
							"value": "{{salary}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
							"    console.log(response.json());\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let resp_f = pm.response.json()\r",
							"let req_f = request.data\r",
							"\r",
							"\r",
							"pm.test(\"Check_start_qa_salary\", function() {\r",
							"    pm.expect(resp_f).to.have.property (\"start_qa_salary\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check_qa_salary_after_6_months\", function() {\r",
							"    pm.expect(resp_f).to.have.property (\"qa_salary_after_6_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check_qa_salary_after_12_months\", function() {\r",
							"    pm.expect(resp_f).to.have.property (\"qa_salary_after_12_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check_qa_salary_after_12_months\", function() {\r",
							"    pm.expect(resp_f).to.have.property (\"qa_salary_after_12_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check_qa_salary_after_1.5_year\", function() {\r",
							"    pm.expect(resp_f).to.have.property (\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check_qa_salary_after_3.5_years\", function() {\r",
							"    pm.expect(resp_f).to.have.property (\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check_person\", function() {\r",
							"    pm.expect(resp_f).to.have.property (\"person\");\r",
							"});\r",
							"\r",
							"let req_salary = +req_f.salary\r",
							"pm.test(\"Check_salary\", function() {\r",
							"    pm.expect (resp_f.start_qa_salary).to.eql(req_salary);\r",
							"    });\r",
							"\r",
							"\r",
							"pm.test(\"Check_salary_6_months\", function() {\r",
							"    pm.expect (resp_f.qa_salary_after_6_months).to.eql(req_salary * 2);\r",
							"    });\r",
							"\r",
							"pm.test(\"Check_salary_12_months\", function() {\r",
							"    pm.expect (resp_f.qa_salary_after_12_months).to.eql(req_salary * 2.7);\r",
							"    });\r",
							"\r",
							"pm.test(\"Check_salary_1.5year\", function() {\r",
							"    pm.expect (resp_f[\"qa_salary_after_1.5_year\"]).to.eql(req_salary * 3.3);\r",
							"    });\r",
							"console.log (\"resp_salary_1.5year = \"+ resp_f[\"qa_salary_after_1.5_year\"])\r",
							"\r",
							" \r",
							"pm.test(\"Check_salary_3.5years\", function() {\r",
							"    pm.expect (resp_f[\"qa_salary_after_3.5_years\"]).to.eql(req_salary * 3.8);\r",
							"    });\r",
							" console.log (\"resp_salary_3.5years = \"+ resp_f[\"qa_salary_after_3.5_years\"])\r",
							"\r",
							"pm.test(\"Check_u_name [1]\", function() {\r",
							"    pm.expect (resp_f.person.u_name [1]).to.eql(req_salary);\r",
							"    });\r",
							"console.log (\"resp_person.u_name [1] = \"+ resp_f.person.u_name [1])\r",
							"\r",
							"let req_age = +req_f.age\r",
							"pm.test(\"Check_u_age\", function() {\r",
							"    pm.expect (resp_f.person.u_age).to.eql(req_age);\r",
							"    });\r",
							"console.log (\"resp_person.u_age = \"+ resp_f.person.u_age)\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"Check_u_salary_5_years\", function() {\r",
							"    pm.expect (resp_f.person.u_salary_5_years).to.eql(req_salary * 4.2);\r",
							"    });\r",
							"console.log (\"resp_person.u_salary_5_years = \"+ resp_f.person.u_salary_5_years)\r",
							"\r",
							"\r",
							"//  for (let in resp_f.person) {\r",
							"//      console.log(\"person=\", resp_f.person)\r",
							"//  }\r",
							"\r",
							"//   console.log(\"person length ==\", resp_f.person.length)\r",
							" for (let i = 0; i < resp_f.person.length; i++){\r",
							"     console.log(\"person=\", resp_f.person[i])\r",
							" }\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{ip-port}}/user_info_2",
					"host": [
						"{{ip-port}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}